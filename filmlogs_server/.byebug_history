c
res = RestClient.get(`https://api.geoapify.com/v1/geocode/search?text=#{address_params}m&apiKey=4bf748cc72c4440b8860db33cb8c88fe`)
c
res = RestClient.get(`https://api.geoapify.com/v1/geocode/search?text=#{address_params}m&apiKey=8f87706a21ef4872afa2c296b4f9d856`)
address_params
c
res = RestClient.get(`https://api.geoapify.com/v1/geocode/search?text=#{address_params}m&apiKey=8f87706a21ef4872afa2c296b4f9d856`)
address_params
c
params[:encodedAddress]
:encodedAddress
res = RestClient.get(`https://api.geoapify.com/v1/geocode/search?text=#{address_params}m&apiKey=8f87706a21ef4872afa2c296b4f9d856`)
res
address_params
c
JSON.parse(res.body)['features'][0]['properties']
JSON.parse(res.body)['features'].type
JSON.parse(res.body)['features']['type']
JSON.parse(res.body)['features']
JSON.parse(res.body)['properties']
JSON.parse(res.body)['features'][1]
JSON.parse(res.body)['features']['properties']
JSON.parse(res.body)['features']
JSON.parse(res.body)['type']
JSON.parse(res.body)
JSON.parse(res.body)['type']
JSON.parse(res.body)['type]
JSON.parse(res.body)["]
JSON.parse(res.body)
obj.features
obj[0]
obj[type]
obj.type
obj = JSON.parse(ob)
JSON.parse(ob)
ob
r
require 'json'
ob[type]
object.respond_to?(:features)
object.respond_to?(:type)
ob.respond_to?(:type)
ob.respone_to?(:type)
object.respond_to?(:response)
object.respond_to?(:response) => true
object = JSON.parse(r, object_class: OpenStruct)
ob = JSON.parse(r)
p parsed
parsed[0]
parsed.type
parsed = ActiveSupport::JSON.decode(r)
r.type
r[0]
r.features
p r
r = res.body.to_json
res.body.to_json
res.body.features
p res.body
pp res.body
res.body
res
c
render json:res.body
res.body
res
params
c
url_for(photo.image)
url_for(images)
url_for(image)
url_for(Photo.first.image)
Photo.first.image
Photo.all.image
Photo.all
url_for(p)
url_for(photo.image)
rails_blob_path(images, only_path: true)
rails_blob_path(:image, only_path: true)
rails_blob_path(image, only_path: true)
p
i
p.image
p
pho = Photo.last
i = Photo.last
p = Photo.last.image
p = photo.last
i = photo.last.image
c
params[:image]
params
params[:images]
c
params[:image]
params[:slideshow_id]
photo_params
c
params[:image]
params[:slideshow_id]
photo_params
params
c
cc
c
rails_blob_path(self.object.image, only_path: true)
rails_blob_path(self.objcet.image, only_path: true)
self.object.image
self.object
self
rails_blob_path
include Rails.application.routes.url_helpers
c
continue
rails_blob_path
continue
rails_blob_path
continue
render json: s.serializable_has[:data][:attributes]
render json: Slideshow.all
s = Slideshow.all
continue
slideshow
Slideshow
slideshow_params
sildeshow_params
continue
slideshow_params
newSlideshow
params
