{"ast":null,"code":"var _jsxFileName = \"/home/yoojin/Development/code/phase_5/project/client/src/Components/NewFilm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom'; // Styling\n\nimport { FormContainer } from '../Styles/NewFilm.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewFilm(_ref) {\n  _s();\n\n  let {\n    currentUser,\n    updateSlideshows,\n    getSlideId\n  } = _ref;\n  const [address, setAddress] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [note, setNote] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [lon, setLon] = useState(\"\");\n  const [lat, setLat] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    if (!currentUser) {\n      fetch('/me').then(res => {\n        if (!res.ok) {\n          history.push('/loginerror');\n        }\n      });\n    }\n  }, []);\n  useEffect(() => {\n    if (address) {\n      fetch(`https://api.geoapify.com/v1/geocode/search?text=${encodeURIComponent(address)}&apiKey=4bf748cc72c4440b8860db33cb8c88fe`).then(resp => resp.json()).then(res => {\n        const geocodeResult = res.features[0].properties;\n        setCity(geocodeResult.city);\n        setCountry(geocodeResult.country);\n        setLon(geocodeResult.lon);\n        setLat(geocodeResult.lat);\n      });\n    }\n  }, [address]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const slideshow = {\n      address: address,\n      city: city,\n      country: country,\n      lon: lon,\n      lat: lat,\n      date: date,\n      note: note,\n      user_id: currentUser.id,\n      isReleased: false\n    };\n    handlePost(slideshow, `/postphotos`);\n  }\n\n  function handlePost(item, urlAddress) {\n    fetch('/slideshows', {\n      method: 'POST',\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(item)\n    }).then(res => {\n      if (res.ok) {\n        res.json().then(slide => {\n          updateSlideshows(slide);\n          getSlideId(slide.id);\n          history.push(urlAddress);\n        });\n      } else {\n        res.json().then(json => setErrors(Object.entries(json.errors)));\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"first-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"address\",\n          placeholder: \"Address\",\n          value: address,\n          onChange: e => setAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"date\",\n          placeholder: \"year.month.date\",\n          value: date,\n          onChange: e => setDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"second-row\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          name: \"note\",\n          placeholder: \"Note\",\n          value: note,\n          onChange: e => setNote(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), errors ? errors.map(error => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", error[0], \" \", error[1], \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 36\n    }, this)) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewFilm, \"HHRiTP0Vkl2tB+uykmDuRDrMgQ4=\", false, function () {\n  return [useHistory];\n});\n\n_c = NewFilm;\nexport default NewFilm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewFilm\");","map":{"version":3,"names":["React","useEffect","useState","useHistory","FormContainer","NewFilm","currentUser","updateSlideshows","getSlideId","address","setAddress","date","setDate","note","setNote","city","setCity","country","setCountry","lon","setLon","lat","setLat","errors","setErrors","history","fetch","then","res","ok","push","encodeURIComponent","resp","json","geocodeResult","features","properties","handleSubmit","e","preventDefault","slideshow","user_id","id","isReleased","handlePost","item","urlAddress","method","headers","body","JSON","stringify","slide","Object","entries","target","value","map","error"],"sources":["/home/yoojin/Development/code/phase_5/project/client/src/Components/NewFilm.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\n// Styling\nimport { FormContainer } from '../Styles/NewFilm.style'\n\nfunction NewFilm({currentUser, updateSlideshows, getSlideId}) {\n  const [ address, setAddress ] = useState(\"\")\n  const [ date, setDate ] = useState(\"\")\n  const [ note, setNote ] = useState(\"\")\n  const [ city, setCity ] = useState(\"\")\n  const [ country, setCountry ] = useState(\"\")\n  const [ lon, setLon ] = useState(\"\")\n  const [ lat, setLat ] = useState(\"\")\n\n  const [ errors, setErrors ] = useState([])\n  const history = useHistory()\n\n  useEffect(() => {\n    if (!currentUser) {\n      fetch('/me').then((res) => {\n        if (!res.ok) {\n            history.push('/loginerror')\n        }\n      })\n    }\n  }, [])\n\n  useEffect(() => {\n    if (address) {\n      fetch(`https://api.geoapify.com/v1/geocode/search?text=${encodeURIComponent(address)}&apiKey=4bf748cc72c4440b8860db33cb8c88fe`)\n        .then(resp => resp.json())\n        .then((res) => {\n          const geocodeResult = res.features[0].properties\n          setCity(geocodeResult.city)\n          setCountry(geocodeResult.country)\n          setLon(geocodeResult.lon)\n          setLat(geocodeResult.lat)\n      })\n    }\n  }, [address])\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    const slideshow = {\n      address: address,\n      city: city,\n      country: country,\n      lon: lon,\n      lat: lat,\n      date: date, \n      note: note, \n      user_id: currentUser.id,\n      isReleased: false\n    }\n    handlePost(slideshow, `/postphotos`)\n  }\n\n  function handlePost(item, urlAddress) {\n    fetch('/slideshows',{\n      method: 'POST',\n      headers: {\"Content-type\": \"application/json\"},\n      body: JSON.stringify(item)\n    }).then(res => {\n      if (res.ok) {\n          res.json().then(slide => {\n            updateSlideshows(slide)\n            getSlideId(slide.id)\n            history.push(urlAddress)\n          })\n      } else {\n          res.json().then(json => setErrors(Object.entries(json.errors)))\n      }\n    })\n  }\n\n  return (\n    <FormContainer>\n      <form onSubmit={(e) => handleSubmit(e)}>\n        <div className='first-row'>\n          <input \n            type='text'\n            name='address'\n            placeholder='Address' \n            value={address}\n            onChange={(e) => setAddress(e.target.value)}\n          />\n          <input \n            type='text'\n            name='date'\n            placeholder='year.month.date' \n            value={date}\n            onChange={(e) => setDate(e.target.value)}\n          />\n        </div>\n        <div className='second-row'>\n          <textarea\n            type='text'\n            name='note'\n            placeholder='Note' \n            value={note}\n            onChange={(e) => setNote(e.target.value)}\n          />\n        </div>\n        <button type='submit'>Next</button>\n      </form>\n      {errors? errors.map(error => <div> {error[0]} {error[1]} </div>) :null}\n    </FormContainer>\n  )\n}\n\nexport default NewFilm"],"mappings":"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"},"metadata":{},"sourceType":"module"}