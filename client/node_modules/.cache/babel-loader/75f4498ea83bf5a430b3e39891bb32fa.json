{"ast":null,"code":"var _jsxFileName = \"/home/yoojin/Development/code/phase_5/project/client/src/Components/PostPhotos.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { PostPhotoContainer } from '../Styles/PostPhotos.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostPhotos(_ref) {\n  _s();\n\n  let {\n    currentSlideId,\n    currentUser,\n    updateSlideshows\n  } = _ref;\n  // const [image, setImage] = useState(null)\n  const [selectedImages, setSelectedImages] = useState([]);\n  const history = useHistory();\n\n  function imageHandleChange(e) {\n    if (e.target.files) {\n      const fileArray = Array.from(e.target.files).map(file => URL.createObjectURL(file));\n      setSelectedImages(images => images.concat(fileArray));\n      Array.from(e.target.files).map(file => URL.revokeObjectURL(file));\n    }\n  }\n\n  function renderPhotos(source) {\n    return source.map(photo => {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: photo,\n        className: \"renderedPhotos\",\n        onClick: () => renderDelete(photo)\n      }, photo, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 14\n      }, this);\n    });\n  }\n\n  function renderDelete(source) {\n    const updatedList = [...selectedImages];\n    updatedList.splice(selectedImages.indexOf(source), 1);\n    setSelectedImages(updatedList);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData();\n    const uploadingImages = e.target.image.files;\n    uploadingImages === null || uploadingImages === void 0 ? void 0 : uploadingImages.map(newImage => console.log(newImage) // data.append(\"image\", image),\n    // data.append(\"slideshow_id\", currentSlideId),\n    ); // data.append(\"image\", e.target.image.files[0])\n    // data.append(\"slideshow_id\", currentSlideId)\n    // submitToAPI(data)\n  }\n\n  function submitToAPI(data) {\n    fetch('/photos', {\n      method: 'POST',\n      body: data\n    }).then(res => res.json()).then(data => {\n      // setImage(data.image_url)\n      console.log(data);\n    }).catch(error => console.error(error));\n    fetch(`/slideshows/${currentSlideId}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        isReleased: true\n      })\n    }).then(res => res.json()).then(res => {\n      updateSlideshows(res); // history.push(`/user/${currentUser.id}`)\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(PostPhotoContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        name: \"image\",\n        id: \"image\",\n        onChange: imageHandleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Film\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), renderPhotos(selectedImages)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostPhotos, \"Rb9unUutQC3bAHoG+o5OstOz4Mk=\", false, function () {\n  return [useHistory];\n});\n\n_c = PostPhotos;\nexport default PostPhotos;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostPhotos\");","map":{"version":3,"names":["React","useRef","useState","useHistory","PostPhotoContainer","PostPhotos","currentSlideId","currentUser","updateSlideshows","selectedImages","setSelectedImages","history","imageHandleChange","e","target","files","fileArray","Array","from","map","file","URL","createObjectURL","images","concat","revokeObjectURL","renderPhotos","source","photo","renderDelete","updatedList","splice","indexOf","handleSubmit","preventDefault","data","FormData","uploadingImages","image","newImage","console","log","submitToAPI","fetch","method","body","then","res","json","catch","error","headers","JSON","stringify","isReleased"],"sources":["/home/yoojin/Development/code/phase_5/project/client/src/Components/PostPhotos.js"],"sourcesContent":["import React, { useRef, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { PostPhotoContainer } from '../Styles/PostPhotos.style'\n\nfunction PostPhotos({currentSlideId, currentUser, updateSlideshows}) {\n  \n  // const [image, setImage] = useState(null)\n  const [selectedImages, setSelectedImages] = useState([])\n\n  const history = useHistory()\n\n  function imageHandleChange(e) {\n    if(e.target.files) {\n      const fileArray = Array.from(e.target.files).map((file) => URL.createObjectURL(file))\n      \n      setSelectedImages((images) => images.concat(fileArray))\n      Array.from(e.target.files).map(\n        (file) => URL.revokeObjectURL(file)\n      )\n    }\n  }\n\n  function renderPhotos(source) {\n    return source.map((photo) => {\n      return <img \n        src={photo} \n        key={photo} \n        className='renderedPhotos' \n        onClick={() => renderDelete(photo)}\n      />\n    })\n  }\n\n  function renderDelete(source) {\n    const updatedList = [...selectedImages]\n    updatedList.splice(selectedImages.indexOf(source), 1)\n    setSelectedImages(updatedList)\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    const data = new FormData()\n    const uploadingImages = e.target.image.files\n\n\n    uploadingImages?.map((newImage) => \n    console.log(newImage)\n      // data.append(\"image\", image),\n      // data.append(\"slideshow_id\", currentSlideId),\n    )\n    // data.append(\"image\", e.target.image.files[0])\n    // data.append(\"slideshow_id\", currentSlideId)\n    // submitToAPI(data)\n\n  }\n\n  function submitToAPI(data) {\n    fetch('/photos', {\n      method: 'POST',\n      body: data,\n    })\n      .then(res => res.json())\n      .then(data => {\n        // setImage(data.image_url)\n        console.log(data)\n      })\n      .catch((error) => console.error(error))\n\n    fetch(`/slideshows/${currentSlideId}`, {\n      method: 'PATCH',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        isReleased: true\n      })\n    })\n      .then(res => res.json())\n      .then(res => {\n        updateSlideshows(res)\n        // history.push(`/user/${currentUser.id}`)\n      })\n  }\n\n  return (\n    <PostPhotoContainer>\n      <form onSubmit={(e) => handleSubmit(e)}>\n        <input \n          type='file' \n          multiple \n          name='image' \n          id='image'\n          onChange={imageHandleChange}\n        />\n        <button type='submit'>Submit Film</button>\n      </form>\n      {renderPhotos(selectedImages)}\n    </PostPhotoContainer>\n  )\n}\n\nexport default PostPhotos"],"mappings":"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"},"metadata":{},"sourceType":"module"}