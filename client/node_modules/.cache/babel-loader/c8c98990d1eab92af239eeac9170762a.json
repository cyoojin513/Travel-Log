{"ast":null,"code":"var _jsxFileName = \"/home/yoojin/Development/code/phase_5/project/client/src/Components/UserPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport MovieCard from './MovieCard';\nimport PreLeaseCard from './PreLeaseCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserPage(_ref) {\n  _s();\n\n  var _this = this;\n\n  let {\n    currentUser,\n    slideshows,\n    deleteRendered\n  } = _ref;\n  return function (deleteRendered) {\n    const [renderslide, setRenderSlide] = useState(slideshows);\n    useEffect(() => {\n      fetch('/slideshows').then(res => {\n        if (res.ok) {\n          res.json().then(data => setSlideshows(data));\n        }\n      });\n    }, [currentUser]);\n\n    function deleteRendered(id) {\n      const updatedList = slideshows.filter(item => item.id !== id);\n      setRenderSlide(updatedList);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: renderslide.map(slide => slide.isReleased ? /*#__PURE__*/_jsxDEV(MovieCard, {\n          id: slide.id,\n          city: slide.city,\n          country: slide.country,\n          date: slide.date\n        }, slide.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, _this) : null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Pre-release Films\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: renderslide.map(slide => slide.isReleased ? null : /*#__PURE__*/_jsxDEV(PreLeaseCard, {\n          id: slide.id,\n          city: slide.city,\n          country: slide.country,\n          date: slide.date\n        }, slide.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, _this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, _this);\n  }(deleteRendered);\n}\n\n_s(UserPage, \"EEXmgmyVoigqXDqiL7ayOIHibwU=\");\n\n_c = UserPage;\nexport default UserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"names":["React","useState","useEffect","MovieCard","PreLeaseCard","UserPage","currentUser","slideshows","deleteRendered","renderslide","setRenderSlide","fetch","then","res","ok","json","data","setSlideshows","id","updatedList","filter","item","map","slide","isReleased","city","country","date"],"sources":["/home/yoojin/Development/code/phase_5/project/client/src/Components/UserPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport MovieCard from './MovieCard'\nimport PreLeaseCard from './PreLeaseCard'\n\nfunction UserPage({currentUser, slideshows, deleteRendered}) {\n\n  const [renderslide, setRenderSlide] = useState(slideshows)\n\n  useEffect(() => {\n    fetch('/slideshows')\n    .then((res) => {\n      if (res.ok) {\n        res.json().then((data) => setSlideshows(data))\n      }\n    })\n  }, [ currentUser ])\n\n  function deleteRendered(id) {\n    const updatedList = slideshows.filter((item) =>\n      item.id !== id\n    )\n    setRenderSlide(updatedList)\n  }\n\n  return (\n    <div>\n      <h1>My Movies</h1>\n      <div>\n        {renderslide.map((slide) => slide.isReleased\n          ? <MovieCard\n              key = {slide.id}\n              id = {slide.id}\n              city = {slide.city}\n              country = {slide.country}\n              date = {slide.date}\n            />\n          : null\n        )}\n      </div>\n      <h1>Pre-release Films</h1>\n      <div>\n        {renderslide.map((slide) => slide.isReleased\n          ? null\n          : <PreLeaseCard\n              key = {slide.id}\n              id = {slide.id}\n              city = {slide.city}\n              country = {slide.country}\n              date = {slide.date}\n            />\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default UserPage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,SAASC,QAAT;EAAA;;EAAA;;EAAA,IAAkB;IAACC,WAAD;IAAcC,UAAd;IAA0BC;EAA1B,CAAlB;EAAA,iCAA6D;IAE3D,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAACM,UAAD,CAA9C;IAEAL,SAAS,CAAC,MAAM;MACdS,KAAK,CAAC,aAAD,CAAL,CACCC,IADD,CACOC,GAAD,IAAS;QACb,IAAIA,GAAG,CAACC,EAAR,EAAY;UACVD,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAiBI,IAAD,IAAUC,aAAa,CAACD,IAAD,CAAvC;QACD;MACF,CALD;IAMD,CAPQ,EAON,CAAEV,WAAF,CAPM,CAAT;;IASA,SAASE,cAAT,CAAwBU,EAAxB,EAA4B;MAC1B,MAAMC,WAAW,GAAGZ,UAAU,CAACa,MAAX,CAAmBC,IAAD,IACpCA,IAAI,CAACH,EAAL,KAAYA,EADM,CAApB;MAGAR,cAAc,CAACS,WAAD,CAAd;IACD;;IAED,oBACE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,SADF,eAEE;QAAA,UACGV,WAAW,CAACa,GAAZ,CAAiBC,KAAD,IAAWA,KAAK,CAACC,UAAN,gBACxB,QAAC,SAAD;UAEE,EAAE,EAAID,KAAK,CAACL,EAFd;UAGE,IAAI,EAAIK,KAAK,CAACE,IAHhB;UAIE,OAAO,EAAIF,KAAK,CAACG,OAJnB;UAKE,IAAI,EAAIH,KAAK,CAACI;QALhB,GACSJ,KAAK,CAACL,EADf;UAAA;UAAA;UAAA;QAAA,SADwB,GAQxB,IARH;MADH;QAAA;QAAA;QAAA;MAAA,SAFF,eAcE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,SAdF,eAeE;QAAA,UACGT,WAAW,CAACa,GAAZ,CAAiBC,KAAD,IAAWA,KAAK,CAACC,UAAN,GACxB,IADwB,gBAExB,QAAC,YAAD;UAEE,EAAE,EAAID,KAAK,CAACL,EAFd;UAGE,IAAI,EAAIK,KAAK,CAACE,IAHhB;UAIE,OAAO,EAAIF,KAAK,CAACG,OAJnB;UAKE,IAAI,EAAIH,KAAK,CAACI;QALhB,GACSJ,KAAK,CAACL,EADf;UAAA;UAAA;UAAA;QAAA,SAFH;MADH;QAAA;QAAA;QAAA;MAAA,SAfF;IAAA;MAAA;MAAA;MAAA;IAAA,SADF;EA8BD,CAlDD;AAAA;;GAASb,Q;;KAAAA,Q;AAoDT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}