{"ast":null,"code":"var _jsxFileName = \"/home/yoojin/Development/code/phase_5/project/client/src/Components/NewFilm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewFilm(_ref) {\n  _s();\n\n  let {\n    currentUser,\n    updateSlideshows,\n    getSlideId\n  } = _ref;\n  const [address, setAddress] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [note, setNote] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const history = useHistory(); // function getGeocode() {\n  //   const url = 'https://geocode.search.hereapi.com/v1/geocode?q=' + address + '&gen=9apiKey=_UflM7c4oF5vFzs30fh5ZNLsEmovcCI6tSagg2YLaSM'\n  //   const xmlHttp = new XMLHttpRequest()\n  //   xmlHttp.open(\"GET\", url, false)\n  //   xmlHttp.send(null)\n  //   const json = JSON.parse(xmlHttp.responseText)\n  //   console.log(json)\n  // }\n\n  function getGeocode() {\n    fetch(`https://api.geoapify.com/v1/geocode/search?text=${encodeURIComponent(address)}&apiKey=4bf748cc72c4440b8860db33cb8c88fe`).then(resp => resp.json()).then(geocodingResult => {\n      console.log(geocodingResult[0].properties);\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    getGeocode();\n    const slideshow = {\n      address: address,\n      date: date,\n      note: note,\n      user_id: currentUser.id,\n      isReleased: false\n    }; // handlePost(slideshow, `/postphotos`)\n  }\n\n  function handlePost(item, urlAddress) {\n    fetch('/slideshows', {\n      method: 'POST',\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(item)\n    }).then(res => {\n      if (res.ok) {\n        res.json().then(slide => {\n          updateSlideshows(slide);\n          getSlideId(slide.id);\n          history.push(urlAddress);\n        });\n      } else {\n        res.json().then(json => setErrors(Object.entries(json.errors)));\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"address\",\n        placeholder: \"Address\",\n        value: address,\n        onChange: e => setAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"date\",\n        placeholder: \"year.month.date\",\n        value: date,\n        onChange: e => setDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"note\",\n        placeholder: \"Note\",\n        value: note,\n        onChange: e => setNote(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), errors ? errors.map(error => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", error[0], \" \", error[1], \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 36\n    }, this)) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewFilm, \"6kGRi3NIrIVaVPghIL7vYgrBggk=\", false, function () {\n  return [useHistory];\n});\n\n_c = NewFilm;\nexport default NewFilm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewFilm\");","map":{"version":3,"names":["React","useState","useHistory","NewFilm","currentUser","updateSlideshows","getSlideId","address","setAddress","date","setDate","note","setNote","errors","setErrors","history","getGeocode","fetch","encodeURIComponent","then","resp","json","geocodingResult","console","log","properties","handleSubmit","e","preventDefault","slideshow","user_id","id","isReleased","handlePost","item","urlAddress","method","headers","body","JSON","stringify","res","ok","slide","push","Object","entries","target","value","map","error"],"sources":["/home/yoojin/Development/code/phase_5/project/client/src/Components/NewFilm.js"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nfunction NewFilm({currentUser, updateSlideshows, getSlideId}) {\n  const [ address, setAddress ] = useState(\"\")\n  const [ date, setDate ] = useState(\"\")\n  const [ note, setNote ] = useState(\"\")\n\n  const [ errors, setErrors ] = useState([])\n  const history = useHistory()\n\n  // function getGeocode() {\n  //   const url = 'https://geocode.search.hereapi.com/v1/geocode?q=' + address + '&gen=9apiKey=_UflM7c4oF5vFzs30fh5ZNLsEmovcCI6tSagg2YLaSM'\n  //   const xmlHttp = new XMLHttpRequest()\n  //   xmlHttp.open(\"GET\", url, false)\n  //   xmlHttp.send(null)\n  //   const json = JSON.parse(xmlHttp.responseText)\n  //   console.log(json)\n  // }\n\n  function getGeocode() {\n    fetch(`https://api.geoapify.com/v1/geocode/search?text=${encodeURIComponent(address)}&apiKey=4bf748cc72c4440b8860db33cb8c88fe`)\n      .then(resp => resp.json())\n      .then((geocodingResult) => {\n\t    console.log(geocodingResult[0].properties)\n    })\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    getGeocode()\n    const slideshow = {\n      address: address,\n      date: date, \n      note: note, \n      user_id: currentUser.id,\n      isReleased: false\n    }\n    // handlePost(slideshow, `/postphotos`)\n  }\n\n  function handlePost(item, urlAddress) {\n    fetch('/slideshows',{\n      method: 'POST',\n      headers: {\"Content-type\": \"application/json\"},\n      body: JSON.stringify(item)\n    }).then(res => {\n      if (res.ok) {\n          res.json().then(slide => {\n            updateSlideshows(slide)\n            getSlideId(slide.id)\n            history.push(urlAddress)\n          })\n      } else {\n          res.json().then(json => setErrors(Object.entries(json.errors)))\n      }\n    })\n  }\n\n  return (\n    <div>\n      <form onSubmit={(e) => handleSubmit(e)}>\n        <input \n          type='text'\n          name='address'\n          placeholder='Address' \n          value={address}\n          onChange={(e) => setAddress(e.target.value)}\n        />\n        <input \n          type='text'\n          name='date'\n          placeholder='year.month.date' \n          value={date}\n          onChange={(e) => setDate(e.target.value)}\n        />\n        <input \n          type='text'\n          name='note'\n          placeholder='Note' \n          value={note}\n          onChange={(e) => setNote(e.target.value)}\n        />\n        <button type='submit'>Next</button>\n      </form>\n      {errors? errors.map(error => <div> {error[0]} {error[1]} </div>) :null}\n    </div>\n  )\n}\n\nexport default NewFilm"],"mappings":"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"},"metadata":{},"sourceType":"module"}