{"ast":null,"code":"var _jsxFileName = \"/home/yoojin/Development/code/phase_5/project/client/src/Components/EditFilm.js\",\n    _s = $RefreshSig$();\n\n// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditFilm(_ref) {\n  _s();\n\n  let {\n    updatingIsReleased,\n    getSlideId\n  } = _ref;\n  const [slideInfo, setSlideInfo] = useState({\n    address: '',\n    date: '',\n    note: ''\n  });\n  const [errors, setErrors] = useState([]);\n  const history = useHistory();\n  const params = useParams();\n  const slideshowId = params.id;\n  useEffect(() => {\n    fetch(`/slideshows/${slideshowId}`).then(res => res.json()).then(setSlideInfo);\n  }, []);\n\n  function handleChange(e) {\n    const value = e.target.value;\n    setSlideInfo({ ...slideInfo,\n      [e.target.address]: encodeURIComponent(value),\n      [e.target.date]: value,\n      [e.target.note]: value\n    });\n  }\n\n  function handlePatch(e) {\n    e.preventDefault();\n    fetch(`/slideshows/${slideshowId}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(slideInfo)\n    }).then(res => {\n      if (res.ok) {\n        res.json().then(slide => {\n          updatingIsReleased(slide);\n          getSlideId(slide.id);\n          history.push('/postphotos');\n        });\n      } else {\n        res.json().then(data => setErrors(Object.entries(data.errors).map(e => `${e[0]} ${e[1]}`)));\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handlePatch(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"address\",\n        placeholder: \"Address\",\n        value: slideinfo.address,\n        onChange: e => setAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"date\",\n        placeholder: \"year.month.date\",\n        value: slideinfo.date,\n        onChange: e => setDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"note\",\n        placeholder: \"Note\",\n        value: slideinfo.note,\n        onChange: e => setNote(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), errors ? errors.map(error => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", error[0], \" \", error[1], \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 36\n    }, this)) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditFilm, \"adyr9hMchRC5WT7v7dX7lQ2/dPY=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = EditFilm;\nexport default EditFilm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditFilm\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","useParams","EditFilm","updatingIsReleased","getSlideId","slideInfo","setSlideInfo","address","date","note","errors","setErrors","history","params","slideshowId","id","fetch","then","res","json","handleChange","e","value","target","encodeURIComponent","handlePatch","preventDefault","method","headers","body","JSON","stringify","ok","slide","push","data","Object","entries","map","slideinfo","setAddress","setDate","setNote","error"],"sources":["/home/yoojin/Development/code/phase_5/project/client/src/Components/EditFilm.js"],"sourcesContent":["// @ts-nocheck\nimport React, { useState, useEffect } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\n\nfunction EditFilm({updatingIsReleased, getSlideId}) {\n  const [ slideInfo, setSlideInfo ] = useState({\n    address:'',\n    date:'',\n    note:''\n  })\n\n  const [ errors, setErrors ] = useState([])\n  const history = useHistory()\n  const params = useParams()\n  const slideshowId = params.id\n\n  useEffect(() => {\n    fetch(`/slideshows/${slideshowId}`)\n    .then(res => res.json())\n    .then(setSlideInfo)\n  },[])\n\n  function handleChange(e) {\n    const value = e.target.value\n    setSlideInfo({ ...slideInfo,\n      [e.target.address]: encodeURIComponent(value),\n      [e.target.date]: value,\n      [e.target.note]: value\n    })\n  }\n\n  function handlePatch(e){\n    e.preventDefault()\n    fetch(`/slideshows/${slideshowId}`,{\n      method:'PATCH',\n      headers: {'Content-Type': 'application/json'},\n      body:JSON.stringify(slideInfo)\n    })\n    .then(res => {\n      if(res.ok){\n        res.json().then(slide =>{\n          updatingIsReleased(slide)\n          getSlideId(slide.id)\n          history.push('/postphotos')\n        })\n      } else {\n        res.json().then(data => setErrors(Object.entries(data.errors).map(e => `${e[0]} ${e[1]}`)))\n      }\n    })\n  }\n\n  return (\n    <div>\n      <form onSubmit={(e) => handlePatch(e)}>\n        <input \n          type='text'\n          name='address'\n          placeholder='Address' \n          value={slideinfo.address}\n          onChange={(e) => setAddress(e.target.value)}\n        />\n        <input \n          type='text'\n          name='date'\n          placeholder='year.month.date' \n          value={slideinfo.date}\n          onChange={(e) => setDate(e.target.value)}\n        />\n        <input \n          type='text'\n          name='note'\n          placeholder='Note' \n          value={slideinfo.note}\n          onChange={(e) => setNote(e.target.value)}\n        />\n        <button type='submit'>Next</button>\n      </form>\n      {errors? errors.map(error => <div> {error[0]} {error[1]} </div>) :null}\n    </div>\n  )\n}\n\nexport default EditFilm"],"mappings":"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"},"metadata":{},"sourceType":"module"}