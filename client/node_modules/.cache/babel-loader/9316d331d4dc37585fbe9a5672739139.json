{"ast":null,"code":"var _jsxFileName = \"/home/yoojin/Development/code/phase_5/project/client/src/Components/EditFilm.js\",\n    _s = $RefreshSig$();\n\n// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditFilm(_ref) {\n  _s();\n\n  let {\n    updatingIsReleased,\n    getSlideId\n  } = _ref;\n  const [address, setAddress] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [note, setNote] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [lon, setLon] = useState(\"\");\n  const [lat, setLat] = useState(\"\"); // const [ slideInfo, setSlideInfo ] = useState({\n  //   address:'',\n  //   encodedAddress:'',\n  //   date:'',\n  //   note:''\n  // })\n\n  const [errors, setErrors] = useState([]);\n  const history = useHistory();\n  const params = useParams();\n  const slideshowId = params.id;\n  useEffect(() => {\n    fetch(`/slideshows/${slideshowId}`).then(res => res.json()).then(res => {\n      setAddress(res.address);\n      setCity(res.city);\n      setCountry(res.country);\n      setLon(res.lon);\n      setLat(res.lat);\n      setDate(res.date);\n      setNote(res.note);\n    });\n  }, []);\n\n  function getGeocode() {\n    fetch(`https://api.geoapify.com/v1/geocode/search?text=${encodeURIComponent(address)}&apiKey=4bf748cc72c4440b8860db33cb8c88fe`).then(resp => resp.json()).then(res => {\n      const geocodeResult = res.features[0].properties;\n      setCity(geocodeResult.city);\n      setCountry(geocodeResult.country);\n      setLon(geocodeResult.lon);\n      setLat(geocodeResult.lat);\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    getGeocode();\n    const slideshow = {\n      address: address,\n      city: city,\n      country: country,\n      lon: lon,\n      lat: lat,\n      date: date,\n      note: note\n    };\n    handlePatch(slideshow);\n  }\n\n  function handlePatch(item) {\n    fetch(`/slideshows/${slideshowId}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    }).then(res => {\n      if (res.ok) {\n        res.json().then(slide => {\n          updatingIsReleased(slide);\n          getSlideId(slide.id);\n          history.push('/postphotos');\n        });\n      } else {\n        res.json().then(data => setErrors(Object.entries(data.errors).map(e => `${e[0]} ${e[1]}`)));\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"address\",\n        placeholder: \"Address\",\n        value: address,\n        onChange: e => setAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"date\",\n        placeholder: \"year.month.date\",\n        value: date,\n        onChange: e => setDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"note\",\n        placeholder: \"Note\",\n        value: note,\n        onChange: e => setNote(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), errors ? errors.map(error => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", error[0], \" \", error[1], \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 36\n    }, this)) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditFilm, \"MBPi1IrV2dbr8RYe6LrkHWcGVj8=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = EditFilm;\nexport default EditFilm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditFilm\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","useParams","EditFilm","updatingIsReleased","getSlideId","address","setAddress","date","setDate","note","setNote","city","setCity","country","setCountry","lon","setLon","lat","setLat","errors","setErrors","history","params","slideshowId","id","fetch","then","res","json","getGeocode","encodeURIComponent","resp","geocodeResult","features","properties","handleSubmit","e","preventDefault","slideshow","handlePatch","item","method","headers","body","JSON","stringify","ok","slide","push","data","Object","entries","map","target","value","error"],"sources":["/home/yoojin/Development/code/phase_5/project/client/src/Components/EditFilm.js"],"sourcesContent":["// @ts-nocheck\nimport React, { useState, useEffect } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\n\nfunction EditFilm({updatingIsReleased, getSlideId}) {\n  const [ address, setAddress ] = useState(\"\")\n  const [ date, setDate ] = useState(\"\")\n  const [ note, setNote ] = useState(\"\")\n  const [ city, setCity ] = useState(\"\")\n  const [ country, setCountry ] = useState(\"\")\n  const [ lon, setLon ] = useState(\"\")\n  const [ lat, setLat ] = useState(\"\")\n\n  // const [ slideInfo, setSlideInfo ] = useState({\n  //   address:'',\n  //   encodedAddress:'',\n  //   date:'',\n  //   note:''\n  // })\n\n  const [ errors, setErrors ] = useState([])\n  const history = useHistory()\n  const params = useParams()\n  const slideshowId = params.id\n\n  useEffect(() => {\n    fetch(`/slideshows/${slideshowId}`)\n    .then(res => res.json())\n    .then(res => {\n      setAddress(res.address)\n      setCity(res.city)\n      setCountry(res.country)\n      setLon(res.lon)\n      setLat(res.lat)\n      setDate(res.date)\n      setNote(res.note)\n    })\n  },[])\n\n  function getGeocode() {\n    fetch(`https://api.geoapify.com/v1/geocode/search?text=${encodeURIComponent(address)}&apiKey=4bf748cc72c4440b8860db33cb8c88fe`)\n      .then(resp => resp.json())\n      .then((res) => {\n        const geocodeResult = res.features[0].properties\n        setCity(geocodeResult.city)\n        setCountry(geocodeResult.country)\n        setLon(geocodeResult.lon)\n        setLat(geocodeResult.lat)\n    })\n  }\n\n  function handleSubmit(e){\n    e.preventDefault()\n    getGeocode()\n\n    const slideshow = {\n      address: address,\n      city: city,\n      country: country,\n      lon: lon,\n      lat: lat,\n      date: date, \n      note: note\n    }\n    handlePatch(slideshow)\n  }\n\n  function handlePatch(item) {\n    fetch(`/slideshows/${slideshowId}`,{\n      method:'PATCH',\n      headers: {'Content-Type': 'application/json'},\n      body:JSON.stringify(item)\n    })\n    .then(res => {\n      if(res.ok){\n        res.json().then(slide =>{\n          updatingIsReleased(slide)\n          getSlideId(slide.id)\n          history.push('/postphotos')\n        })\n      } else {\n        res.json().then(data => setErrors(Object.entries(data.errors).map(e => `${e[0]} ${e[1]}`)))\n      }\n    })\n  }\n\n  return (\n    <div>\n      <form onSubmit={(e) => handleSubmit(e)}>\n        <input \n          type='text'\n          name='address'\n          placeholder='Address' \n          value={address}\n          onChange={(e) => setAddress(e.target.value)}\n        />\n        <input \n          type='text'\n          name='date'\n          placeholder='year.month.date' \n          value={date}\n          onChange={(e) => setDate(e.target.value)}\n        />\n        <input \n          type='text'\n          name='note'\n          placeholder='Note' \n          value={note}\n          onChange={(e) => setNote(e.target.value)}\n        />\n        <button type='submit'>Next</button>\n      </form>\n      {errors? errors.map(error => <div> {error[0]} {error[1]} </div>) :null}\n    </div>\n  )\n}\n\nexport default EditFilm"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;;;AAEA,SAASC,QAAT,OAAoD;EAAA;;EAAA,IAAlC;IAACC,kBAAD;IAAqBC;EAArB,CAAkC;EAClD,MAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAAES,IAAF,EAAQC,OAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAAEW,IAAF,EAAQC,OAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAAEa,IAAF,EAAQC,OAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAAEe,OAAF,EAAWC,UAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAAEiB,GAAF,EAAOC,MAAP,IAAkBlB,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAAEmB,GAAF,EAAOC,MAAP,IAAkBpB,QAAQ,CAAC,EAAD,CAAhC,CAPkD,CASlD;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM,CAAEqB,MAAF,EAAUC,SAAV,IAAwBtB,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAMuB,OAAO,GAAGrB,UAAU,EAA1B;EACA,MAAMsB,MAAM,GAAGrB,SAAS,EAAxB;EACA,MAAMsB,WAAW,GAAGD,MAAM,CAACE,EAA3B;EAEAzB,SAAS,CAAC,MAAM;IACd0B,KAAK,CAAE,eAAcF,WAAY,EAA5B,CAAL,CACCG,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMC,GAAG,IAAI;MACXrB,UAAU,CAACqB,GAAG,CAACtB,OAAL,CAAV;MACAO,OAAO,CAACe,GAAG,CAAChB,IAAL,CAAP;MACAG,UAAU,CAACa,GAAG,CAACd,OAAL,CAAV;MACAG,MAAM,CAACW,GAAG,CAACZ,GAAL,CAAN;MACAG,MAAM,CAACS,GAAG,CAACV,GAAL,CAAN;MACAT,OAAO,CAACmB,GAAG,CAACpB,IAAL,CAAP;MACAG,OAAO,CAACiB,GAAG,CAAClB,IAAL,CAAP;IACD,CAVD;EAWD,CAZQ,EAYP,EAZO,CAAT;;EAcA,SAASoB,UAAT,GAAsB;IACpBJ,KAAK,CAAE,mDAAkDK,kBAAkB,CAACzB,OAAD,CAAU,0CAAhF,CAAL,CACGqB,IADH,CACQK,IAAI,IAAIA,IAAI,CAACH,IAAL,EADhB,EAEGF,IAFH,CAESC,GAAD,IAAS;MACb,MAAMK,aAAa,GAAGL,GAAG,CAACM,QAAJ,CAAa,CAAb,EAAgBC,UAAtC;MACAtB,OAAO,CAACoB,aAAa,CAACrB,IAAf,CAAP;MACAG,UAAU,CAACkB,aAAa,CAACnB,OAAf,CAAV;MACAG,MAAM,CAACgB,aAAa,CAACjB,GAAf,CAAN;MACAG,MAAM,CAACc,aAAa,CAACf,GAAf,CAAN;IACH,CARD;EASD;;EAED,SAASkB,YAAT,CAAsBC,CAAtB,EAAwB;IACtBA,CAAC,CAACC,cAAF;IACAR,UAAU;IAEV,MAAMS,SAAS,GAAG;MAChBjC,OAAO,EAAEA,OADO;MAEhBM,IAAI,EAAEA,IAFU;MAGhBE,OAAO,EAAEA,OAHO;MAIhBE,GAAG,EAAEA,GAJW;MAKhBE,GAAG,EAAEA,GALW;MAMhBV,IAAI,EAAEA,IANU;MAOhBE,IAAI,EAAEA;IAPU,CAAlB;IASA8B,WAAW,CAACD,SAAD,CAAX;EACD;;EAED,SAASC,WAAT,CAAqBC,IAArB,EAA2B;IACzBf,KAAK,CAAE,eAAcF,WAAY,EAA5B,EAA8B;MACjCkB,MAAM,EAAC,OAD0B;MAEjCC,OAAO,EAAE;QAAC,gBAAgB;MAAjB,CAFwB;MAGjCC,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeL,IAAf;IAH4B,CAA9B,CAAL,CAKCd,IALD,CAKMC,GAAG,IAAI;MACX,IAAGA,GAAG,CAACmB,EAAP,EAAU;QACRnB,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgBqB,KAAK,IAAG;UACtB5C,kBAAkB,CAAC4C,KAAD,CAAlB;UACA3C,UAAU,CAAC2C,KAAK,CAACvB,EAAP,CAAV;UACAH,OAAO,CAAC2B,IAAR,CAAa,aAAb;QACD,CAJD;MAKD,CAND,MAMO;QACLrB,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgBuB,IAAI,IAAI7B,SAAS,CAAC8B,MAAM,CAACC,OAAP,CAAeF,IAAI,CAAC9B,MAApB,EAA4BiC,GAA5B,CAAgChB,CAAC,IAAK,GAAEA,CAAC,CAAC,CAAD,CAAI,IAAGA,CAAC,CAAC,CAAD,CAAI,EAArD,CAAD,CAAjC;MACD;IACF,CAfD;EAgBD;;EAED,oBACE;IAAA,wBACE;MAAM,QAAQ,EAAGA,CAAD,IAAOD,YAAY,CAACC,CAAD,CAAnC;MAAA,wBACE;QACE,IAAI,EAAC,MADP;QAEE,IAAI,EAAC,SAFP;QAGE,WAAW,EAAC,SAHd;QAIE,KAAK,EAAE/B,OAJT;QAKE,QAAQ,EAAG+B,CAAD,IAAO9B,UAAU,CAAC8B,CAAC,CAACiB,MAAF,CAASC,KAAV;MAL7B;QAAA;QAAA;QAAA;MAAA,QADF,eAQE;QACE,IAAI,EAAC,MADP;QAEE,IAAI,EAAC,MAFP;QAGE,WAAW,EAAC,iBAHd;QAIE,KAAK,EAAE/C,IAJT;QAKE,QAAQ,EAAG6B,CAAD,IAAO5B,OAAO,CAAC4B,CAAC,CAACiB,MAAF,CAASC,KAAV;MAL1B;QAAA;QAAA;QAAA;MAAA,QARF,eAeE;QACE,IAAI,EAAC,MADP;QAEE,IAAI,EAAC,MAFP;QAGE,WAAW,EAAC,MAHd;QAIE,KAAK,EAAE7C,IAJT;QAKE,QAAQ,EAAG2B,CAAD,IAAO1B,OAAO,CAAC0B,CAAC,CAACiB,MAAF,CAASC,KAAV;MAL1B;QAAA;QAAA;QAAA;MAAA,QAfF,eAsBE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAtBF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAyBGnC,MAAM,GAAEA,MAAM,CAACiC,GAAP,CAAWG,KAAK,iBAAI;MAAA,gBAAOA,KAAK,CAAC,CAAD,CAAZ,OAAkBA,KAAK,CAAC,CAAD,CAAvB;IAAA;MAAA;MAAA;MAAA;IAAA,QAApB,CAAF,GAA2D,IAzBpE;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA6BD;;GA/GQrD,Q;UAiBSF,U,EACDC,S;;;KAlBRC,Q;AAiHT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}