{"ast":null,"code":"var _jsxFileName = \"/home/yoojin/Development/code/phase_5/project/client/src/App.js\",\n    _s = $RefreshSig$();\n\n// @ts-nocheck\nimport React, { useEffect } from 'react';\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport { useState } from 'react';\nimport Signup from \"./Components/Signup\";\nimport Login from \"./Components/Login\";\nimport UserPage from \"./Components/UserPage\";\nimport NewFilm from \"./Components/NewFilm\";\nimport NavBar from \"./Components/NavBar\";\nimport PostPhotos from './Components/PostPhotos';\nimport Movie from 'Components/Movie';\nimport EditFilm from './Components/EditFilm';\nimport LoginError from './Components/LoginError'; // Styling\n\nimport { AppContainer, SecondRow } from './Styles/App.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState(\"\");\n  const [slideshows, setSlideshows] = useState([]);\n  const [currentSlideId, setCurrentSlideId] = useState(null);\n  const history = useHistory();\n  useEffect(() => {\n    //   if (!currentUser) {\n    //     fetch('/me').then((res) => {\n    //       if (res.ok) {\n    //         res.json().then((data) => setCurrentUser(data))\n    //       } else {\n    //           history.push('/')\n    //       }\n    //     })\n    //   }\n    // }, [])\n    fetch('/me').then(res => {\n      if (res.ok) {\n        res.json().then(user => setCurrentUser(user));\n      } else {\n        history.push('/');\n      }\n    });\n  }, []);\n  console.log(currentUser);\n  useEffect(() => {\n    fetch('/slideshows').then(res => {\n      if (res.ok) {\n        res.json().then(data => setSlideshows(data));\n      }\n    });\n  }, [currentUser]);\n\n  function updateUser(user) {\n    setCurrentUser(user);\n  }\n\n  function deleteRendered(id) {\n    setSlideshows(slideshows === null || slideshows === void 0 ? void 0 : slideshows.filter(item => item.id != id));\n  }\n\n  function updateSlideshows(newMovie) {\n    setSlideshows([...slideshows, newMovie]);\n  }\n\n  function updatingIsReleased(updatedSlide) {\n    const updated = slideshows.map(item => {\n      if (item.id === updatedSlide.id) {\n        return updatedSlide;\n      } else {\n        return item;\n      }\n    });\n    setSlideshows(updated);\n  }\n\n  function getSlideId(id) {\n    setCurrentSlideId(id);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AppContainer, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        currentUser: currentUser,\n        updateUser: updateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SecondRow, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/user/:id\",\n            children: /*#__PURE__*/_jsxDEV(UserPage, {\n              slideshows: slideshows\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/movie/:id\",\n            children: /*#__PURE__*/_jsxDEV(Movie, {\n              currentUser: currentUser,\n              deleteRendered: deleteRendered\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/newfilm\",\n            children: /*#__PURE__*/_jsxDEV(NewFilm, {\n              currentUser: currentUser,\n              updateSlideshows: updateSlideshows,\n              getSlideId: getSlideId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/editfilm/:id\",\n            children: /*#__PURE__*/_jsxDEV(EditFilm, {\n              updatingIsReleased: updatingIsReleased,\n              getSlideId: getSlideId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/postphotos\",\n            children: /*#__PURE__*/_jsxDEV(PostPhotos, {\n              currentSlideId: currentSlideId,\n              currentUser: currentUser,\n              updatingIsReleased: updatingIsReleased\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signup\",\n            children: /*#__PURE__*/_jsxDEV(Signup, {\n              updateUser: updateUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(Login, {\n              updateUser: updateUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"TUxPgrFJ5wRVlmcicYOs9vyIkIo=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","Route","Switch","useHistory","useState","Signup","Login","UserPage","NewFilm","NavBar","PostPhotos","Movie","EditFilm","LoginError","AppContainer","SecondRow","App","currentUser","setCurrentUser","slideshows","setSlideshows","currentSlideId","setCurrentSlideId","history","fetch","then","res","ok","json","user","push","console","log","data","updateUser","deleteRendered","id","filter","item","updateSlideshows","newMovie","updatingIsReleased","updatedSlide","updated","map","getSlideId"],"sources":["/home/yoojin/Development/code/phase_5/project/client/src/App.js"],"sourcesContent":["// @ts-nocheck\nimport React, { useEffect } from 'react'\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport { useState } from 'react'\nimport Signup from \"./Components/Signup\";\nimport Login from \"./Components/Login\";\nimport UserPage from \"./Components/UserPage\";\nimport NewFilm from \"./Components/NewFilm\";\nimport NavBar from \"./Components/NavBar\";\nimport PostPhotos from './Components/PostPhotos';\nimport Movie from 'Components/Movie';\nimport EditFilm from './Components/EditFilm';\nimport LoginError from './Components/LoginError';\n// Styling\nimport { AppContainer, SecondRow } from './Styles/App.style'\n\n\nfunction App() {\n\n  const [ currentUser, setCurrentUser ] = useState(\"\")\n  const [ slideshows, setSlideshows ] = useState([])\n  const [ currentSlideId, setCurrentSlideId ] = useState(null)\n\n  const history = useHistory()\n\n  useEffect(() => {\n  //   if (!currentUser) {\n  //     fetch('/me').then((res) => {\n  //       if (res.ok) {\n  //         res.json().then((data) => setCurrentUser(data))\n  //       } else {\n  //           history.push('/')\n  //       }\n  //     })\n  //   }\n  // }, [])\n    fetch('/me').then(res => {\n      if (res.ok) {\n        res.json().then((user) => setCurrentUser(user))\n      } else { history.push('/') }\n    })\n  }, [])\n\n  console.log(currentUser)\n\n  useEffect(() => {\n    fetch('/slideshows')\n    .then((res) => {\n      if (res.ok) {\n        res.json().then((data) => setSlideshows(data))\n      }\n    })\n  }, [ currentUser ])\n\n  function updateUser(user) {\n    setCurrentUser(user)\n  }\n\n  function deleteRendered(id) {\n    setSlideshows(slideshows?.filter((item) => item.id != id))\n  }\n\n  function updateSlideshows(newMovie) {\n    setSlideshows([...slideshows, newMovie])\n  }\n\n  function updatingIsReleased(updatedSlide) {\n    const updated = slideshows.map((item) =>{\n      if (item.id === updatedSlide.id) {\n        return updatedSlide\n      } else {return item} \n    })\n    setSlideshows(updated)\n  }\n\n  function getSlideId(id) {\n    setCurrentSlideId(id)\n  }\n\n  return (\n    <div>\n      {/* {currentUser */}\n        <AppContainer>\n          <NavBar currentUser={currentUser} updateUser={updateUser}/>\n          <SecondRow>\n            <Switch>\n              <Route path='/user/:id'>\n                <UserPage slideshows={slideshows}/>\n              </Route>\n              <Route path='/movie/:id'>\n                <Movie currentUser={currentUser} deleteRendered={deleteRendered}/>\n              </Route>\n              <Route path='/newfilm'>\n                <NewFilm\n                  currentUser={currentUser}  \n                  updateSlideshows={updateSlideshows}\n                  getSlideId={getSlideId}  \n                />\n              </Route>\n              <Route path='/editfilm/:id'>\n                <EditFilm \n                  updatingIsReleased={updatingIsReleased}\n                  getSlideId={getSlideId}  \n                />\n              </Route>\n              <Route path='/postphotos'>\n                <PostPhotos\n                  currentSlideId={currentSlideId}\n                  currentUser={currentUser}\n                  updatingIsReleased={updatingIsReleased}\n                />\n              </Route>\n              <Route path=\"/signup\">\n                <Signup updateUser={updateUser} />\n              </Route>\n              <Route exact path=\"/\">\n                <Login updateUser={updateUser} />\n              </Route>\n            </Switch>\n          </SecondRow>\n        </AppContainer>\n      {/* : <Switch>\n          <Route path='/user/:id'>\n            <LoginError />\n          </Route>\n          <Route path='/movie/:id'>\n            <LoginError />\n          </Route>\n          <Route path='/newfilm'>\n            <LoginError />\n          </Route>\n          <Route path='/editfilm/:id'>\n            <LoginError />\n          </Route>\n          <Route path='/postphotos'>\n            <LoginError />\n          </Route>\n          <Route path=\"/signup\">\n            <Signup updateUser={updateUser} />\n          </Route>\n          <Route exact path=\"/\">\n            <Login updateUser={updateUser} />\n          </Route>\n        </Switch>\n      } */}\n      \n    </div>\n  );\n}\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}